Before:
  silent! set filetype=terraform

Given terraform (user maps):
  resource "aws_subnet" "dmz" {
    cidr_block = "${var.dmz_subnet["${count.index}"]}" # Comment
  }

Execute (syntax is good):
  AssertEqual 'terraStringInterp', SyntaxOf('count.index')

  " Check it closed the string and wnet back to normal mode properly.
  AssertEqual 'terraComment', SyntaxOf('Comment')


Given terraform (heredoc syntax);
provisioner "local-exec" {
  command = <<CMD
echo ${aws_instance.web.private_ip} >> private_ips.txt && \
my_command
CMD # Comment

  tags = {}
  }
}
;

Execute (syntax is good):
  AssertEqual 'terraStringInterp', SyntaxOf('aws_instance')
  AssertEqual 'terraHereDocText', SyntaxOf('my_command')

  " Closing CMD is still here doc
  AssertEqual 'terraHereDocText', SyntaxOf('CMD', 2)

  " block should be closed
  AssertEqual 'terraComment', SyntaxOf('Comment')

  " tags should reset syntax
  AssertEqual '', SyntaxOf("tags")


Given terraform (nested strings):
  Name = "${var.environment == "staging" ? "sgn-stg-${var.application}" : "sgn-prd-${var.application}"}" # Comment
  Other = "foo"

Execute (syntax is good):
  AssertEqual 'terraStringInterp', SyntaxOf('var.environment')
  AssertEqual 'terraComment', SyntaxOf('Comment')
  AssertEqual '', SyntaxAt(2, 1)

Execute ("Cleanup"):
  silent! unset filetype
