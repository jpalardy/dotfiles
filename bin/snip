#!/usr/bin/env awk -f

BEGIN {
  ft = ENVIRON["FT"]

  # global
  FIXED["--"]   = "-------------------------------------------------"
  FIXED["#--"]  = "#-------------------------------------------------"
  FIXED["isod"] = strftime("%F")
  FIXED["ts"]   = strftime("%s")
  FIXED["cr"]   = "⏎"
  FIXED["->"]   = "→"
  FIXED["=>"]   = "⇨"

  # javascript
  FIXED["javascript:fn"]       = "function"
  FIXED["javascript:function"] = "function (|) {}"
  FIXED["javascript:fori"]     = "for (let i = 0; i < |; i + = 1) {"
  FIXED["javascript:fe"]       = "forEach"
  FIXED["javascript:)"]        = ") => "
  PREFIX["javascript:json"]       = "JSON.stringify"
  PREFIX["javascript:require"]    = "require(\"|\")"
  PREFIX["javascript:console"]    = "console."
  PREFIX["javascript:settimeout"] = "setTimeout"

  # r
  FIXED["r:fn"] = "function"
  FIXED["r:|"]  = "%>%"
  FIXED["r:>"]  = "%>%"
  # rmd
  FIXED["rmd:fn"] = "function"
  FIXED["rmd:|"]  = "%>%"
  FIXED["rmd:>"]  = "%>%"

  # go
  FIXED["go://--"]    = "//-------------------------------------------------"
  FIXED["go:fn"]      = "func |() {\n}"
  FIXED["go:fori"]    = "for i := 0; i < |; i++ {}"
  FIXED["go:forr"]    = "for i, _ := range | {}"
  FIXED["go:iferr"]   = "if err != nil {return}"
  FIXED["go:handler"] = "func(res http.ResponseWriter, req *http.Request)"
  # cycle
  FIXED["go:fmt."]    = "fmt.Println"
  FIXED["go:Println"] = "Printf"
}

#-------------------------------------------------

# blank, skip
NF == 0 {
  print
  next
}

# exact matches
{
  result = FIXED[$0]
  if (result) {
    print result
    next
  }
}

# exact matches, w/ ft
ft {
  result = FIXED[ft ":" $0]
  if (result) {
    print result
    next
  }
}

# prefix matches, w/ ft
ft {
  for (k in PREFIX) {
    if (index(k, ft ":" $0) == 1) {
      print PREFIX[k]
      next
    }
  }
}

# print everything else as-is
{
  print
}

