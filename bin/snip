#!/usr/bin/env awk -f

function snip(key, value) {
  if (snippets[key]) {
    print "duplicate key:", key > "/dev/stderr"
    exit 1
  }
  snippets[key] = value
}

BEGIN {
  ft = ENVIRON["FT"]

  # global
  snip("*:--",   "-------------------------------------------------")
  snip("*:isod", strftime("%F"))
  snip("*:ts",   strftime("%s"))
  snip("*:cr",   "⏎")
  snip("*:->",   "→")
  snip("*:=>",   "⇨")

  # javascript
  snip("javascript:fn",       "function")
      snip("javascript:function", "function (▒) {}")
  snip("javascript:fori",     "for (let i = 0; i < ▒; i + = 1) {")
  snip("javascript:fe",       "forEach(")
  snip("javascript:)",        ") => ")

  # r
  snip("r:fn", "function")
  snip("r:|",  "%>%")
  snip("r:>",  "%>%")
  # rmd
  snip("rmd:fn", "function")
  snip("rmd:|",  "%>%")
  snip("rmd:>",  "%>%")

  # go
  snip("go:fn",      "func ▒() {\n}")
  snip("go:fori",    "for i := 0; i < ▒; i++ {}")
  snip("go:forr",    "for i, _ := range ▒ {}")
  snip("go:iferr",   "if err != nil {return}")
  snip("go:handler", "func(res http.ResponseWriter, req *http.Request)")
  snip("go:fmt.",    "fmt.Println")
      snip("go:Println", "Printf")
}

#-------------------------------------------------

# try to match from the right
# ft-specific first, global next
{
  for (i = length($0); i > 0; i--) {
    ss = substr($0, i)
    result = snippets[ft ":" ss]
    if (!result) {
      result = snippets["*:" ss]
    }
    if (result) {
      print substr($0, 1, i-1) result
      next
    }
  }
}

# no match, print as-is
{
  print
}
