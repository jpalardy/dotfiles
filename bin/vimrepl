#!/bin/bash

# shellcheck disable=SC2120
usage() {
  local error="$1"
  if test -n "$error"; then
    echo >&2 "$error"
  fi

  echo >&2 "Usage: vimrepl [-c command] [-f filename] [ext]"
  echo >&2 "  -c command   command to execute"
  echo >&2 "  -f filename  filename to edit"
  echo >&2 "  ext          extension; used if -f is missing"
  exit 1
}

# -------------------------------------------------

if [ -z "$TMUX" ]; then
  echo >&2 "need to run inside tmux"
  exit 1
fi

ALREADY_SPLIT=0
if [ "$(tmux list-panes -F'#{window_panes}' | head -n1)" -gt 1 ]; then
  ALREADY_SPLIT=1
fi

if test "$#" -eq 0; then
  usage
fi

# -------------------------------------------------

cmd=""
filename=""
split_flag="-h"

while getopts "c:f:v" opt; do
  case "$opt" in
    c)
      cmd=$OPTARG
      ;;
    f)
      filename=$OPTARG
      ;;
    v)
      split_flag="-v"
      ;;
    *)
      usage
      ;;
  esac
done

shift $((OPTIND - 1))

# grab ext
if [ "$#" -gt 0 ] && [ -z "$filename" ]; then
  filename="_vimrepl.$1"
  shift
fi

if test "$#" -gt 0; then
  usage
fi

if test -z "$filename"; then
  usage
fi

# -------------------------------------------------

tmux rename-window "vimrepl-${cmd:-shell}"

if [ "$ALREADY_SPLIT" == 1 ]; then
  vim "$filename"
  exit
fi

# split pane runs shell, or cmd if given
tmux split-window $split_flag
if [ -n "$cmd" ]; then
  tmux send-keys "clear; $cmd" C-m
fi

# go back to initiating (last) pane
tmux select-pane -l

# vim...
vim "$filename"

# after vim, kill other pane(s)
tmux kill-pane -a

